{"version":3,"sources":["components/Header.js","components/CustomContainer.js","views/Home/index.js","store/actions/hotels.js","util/fbEvent.js","views/Hotel/index.js","views/Hotels/Hotel.js","views/Hotels/Search.js","views/Hotels/index.js","App.js","serviceWorker.js","store/reducers/counter.js","store/reducers/hotels.js","store/reducers/index.js","index.js"],"names":["navigations","text","link","type","id","icon","faHome","className","faBed","Header","children","useState","isOpen","setIsOpen","style","backgroundColor","borderBottom","height","expand","light","tag","to","fontSize","onClick","navbar","map","navigation","CustomContainer","border","Home","fetchHotels","dispatch","a","axios","get","response","payload","data","fbEvent","event","object","ReactPixel","track","content_type","inputStyle","Hotel","params","useParams","location","useLocation","useDispatch","useNavigate","query","setQuery","fire","setFire","hotel","useSelector","hotels","find","hotelid","parseInt","useEffect","checkin_date","checkout_date","num_adults","content_ids","queryString","parse","search","Object","keys","length","updateQuery","e","target","value","searchQuery","key","pathname","join","toggle","centered","name","src","imageurl","alt","width","maxWidth","xs","md","faUser","onChange","Array","i","faCalendar","min","moment","Date","format","max","add","description","striped","baseprice","addr1","city","neighborhood","country","starrating","faStar","marginLeft","color","disabled","maxHeight","backgroundImage","backgroundSize","Search","fields","setField","reset","cities","Set","faMapMarkedAlt","initialState","Hotels","navigate","setFields","outputHotel","setOutputHotel","filter","region","searches","App","init","autoConfig","debug","path","element","exact","Boolean","window","hostname","match","reducer","state","actions","combineReducers","counter","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.84ee53f9.chunk.js","sourcesContent":["import { faBed, faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Navbar,\n  NavbarBrand,\n  NavItem,\n  Nav,\n  Container,\n  Collapse,\n  NavbarToggler,\n} from \"reactstrap\";\n\nconst navigations = [\n  {\n    text: \"Home\",\n    link: \"/\",\n    type: \"home\",\n    id: \"home\",\n    icon: <FontAwesomeIcon icon={faHome} className=\"mx-1\" />,\n  },\n  {\n    text: \"Hotels\",\n    link: \"/hotels\",\n    type: \"item\",\n    id: \"hotel\",\n    icon: <FontAwesomeIcon icon={faBed} className=\"mx-1\" />,\n  },\n];\n\nconst Header = ({ children }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <div\n        className=\"fixed-top\"\n        style={{\n          backgroundColor: \"#f8f8f8\",\n          borderBottom: \"1px solid #d9d9d9\",\n          height: \"62px\",\n        }}\n      >\n        <Container>\n          <Navbar expand=\"lg\" light>\n            <NavbarBrand tag=\"span\" className=\"me-auto\">\n              <NavLink\n                to=\"/\"\n                className=\"px-4 py-2\"\n                style={{\n                  fontSize: \"1.5rem\",\n                }}\n              >\n                Smartly Demo\n              </NavLink>\n            </NavbarBrand>\n            <NavbarToggler\n              onClick={() => setIsOpen(!isOpen)}\n              className=\"me-2\"\n            />\n            <Collapse\n              navbar\n              isOpen={isOpen}\n              style={{ backgroundColor: \"#f8f8f8\" }}\n            >\n              <Nav navbar className=\"me-auto align-items-center\">\n                {navigations.map((navigation) => (\n                  <NavItem key={navigation.id}>\n                    <NavLink\n                      to={navigation.link}\n                      className=\"px-4 py-2\"\n                      style={{\n                        fontSize: \"0.75rem\",\n                      }}\n                      onClick={() => setIsOpen(false)}\n                    >\n                      {navigation.icon}\n                      {navigation.text}\n                    </NavLink>\n                  </NavItem>\n                ))}\n              </Nav>\n            </Collapse>\n          </Navbar>\n        </Container>\n      </div>\n      <div style={{ height: \"62px\" }} />\n      {children}\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst CustomContainer = ({ children }) => {\n  return (\n    <div\n      style={{ backgroundColor: \"#f8f8f8\", border: \"1px #d9d9d9 solid\" }}\n      className=\"mt-4\"\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default CustomContainer;\n","import { faBed } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button, Col, Container, Row } from \"reactstrap\";\nimport CustomContainer from \"../../components/CustomContainer\";\n\nconst Home = () => {\n  return (\n    <>\n      <CustomContainer>\n        <Container className=\"py-4\">\n          <div className=\"text-center\">\n            <Row>\n              <Col>\n                <h1>Smartly.io Travel Agency</h1>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <p>Your number 1 choice for virtual travel</p>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <NavLink to=\"/hotels\">\n                  <Button>\n                    <FontAwesomeIcon icon={faBed} className=\"mx-2\" />\n                    Hotels\n                  </Button>\n                </NavLink>\n              </Col>\n            </Row>\n          </div>\n        </Container>\n      </CustomContainer>\n    </>\n  );\n};\n\nexport default Home;\n","import axios from \"axios\";\nexport const fetchHotels = () => async (dispatch) => {\n  try {\n    const response = await axios.get(process.env.NODE_ENV?'http://localhost:3001/hotellist':\"hotellist\");\n    dispatch({type:\"FETCH_HOTELS\",payload:response.data})\n  } catch (e) {}\n};\n","import ReactPixel from \"react-facebook-pixel\";\nexport const fbEvent = ({ event, object }) => {\n  ReactPixel.track(event, { content_type: \"hotel\", ...object });\n};\n","import { faCalendar, faStar, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, useNavigate, useParams } from \"react-router\";\nimport {\n  Button,\n  Card,\n  Col,\n  Container,\n  Input,\n  InputGroup,\n  InputGroupText,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  Row,\n  Table,\n} from \"reactstrap\";\nimport CustomContainer from \"../../components/CustomContainer\";\nimport queryString from \"query-string\";\nimport moment from \"moment\";\nimport { fetchHotels } from \"../../store/actions/hotels\";\nimport { fbEvent } from \"../../util/fbEvent\";\n\nconst inputStyle = { fontSize: \"0.75rem\" };\n\nconst Hotel = () => {\n  const params = useParams();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const navigation = useNavigate();\n  const [query, setQuery] = useState({});\n  const [isOpen, setIsOpen] = useState(false);\n  const [fire, setFire] = useState(false);\n  const hotel = useSelector(({ hotels }) =>\n    hotels.find((hotel) => hotel.hotelid === parseInt(params.id))\n  );\n\n  useEffect(() => {\n    if (\n      hotel &&\n      query.checkin_date &&\n      query.checkout_date &&\n      query.num_adults &&\n      !fire\n    ) {\n      setFire(true);\n      fbEvent({\n        event: \"viewContent\",\n        object: {\n          ...hotel,\n          ...query,\n          content_ids: hotel.hotelid,\n        },\n      });\n    }\n  }, [query, hotel, fire]);\n\n  useEffect(() => {\n    const query = queryString.parse(location.search);\n    dispatch(fetchHotels());\n    if (Object.keys(query).length > 0) setQuery(query);\n    else setQuery({});\n  }, [location, dispatch]);\n\n  const updateQuery = (e) => {\n    let search = { ...query };\n    search[e.target.id] = e.target.value;\n    const searchQuery = Object.keys(search).map(\n      (key) => `${key}=${search[key]}`\n    );\n    navigation(`${location.pathname}?${searchQuery.join(\"&\")}`);\n  };\n\n  const purchase = () => {\n    setIsOpen(true);\n    fbEvent({ event: \"Purchase\", object: { ...hotel, ...query,content_ids:hotel.hotelid } });\n  };\n\n  if (!hotel) return \"Loading....\";\n  return (\n    <>\n      <Modal isOpen={isOpen} toggle={() => setIsOpen(false)} centered>\n        <ModalHeader toggle={() => setIsOpen(false)}>Confirm</ModalHeader>\n        <ModalBody>Your booking has been confirmed!</ModalBody>\n      </Modal>\n      <CustomContainer>\n        <Container className=\"text-center my-4\">\n          <h1>{hotel.name}</h1>\n          <img src={hotel.imageurl} alt={hotel.name} width=\"400px\" />\n        </Container>\n      </CustomContainer>\n      <CustomContainer>\n        <Container className=\"p-2\" style={{ maxWidth: \"800px\" }}>\n          <Row>\n            <Col xs=\"6\" md=\"4\">\n              <InputGroup className=\"customInput\">\n                <InputGroupText style={inputStyle}>\n                  <FontAwesomeIcon icon={faUser} className=\"mx-1\" /> Travellers\n                </InputGroupText>\n                <Input\n                  style={inputStyle}\n                  type=\"select\"\n                  id=\"num_adults\"\n                  onChange={updateQuery}\n                  value={query.num_adults ? query.num_adults : \"\"}\n                >\n                  {[...Array(10)].map((a, i) => (\n                    <option key={i} value={i + 1}>\n                      {i + 1}\n                    </option>\n                  ))}\n                </Input>\n              </InputGroup>\n            </Col>\n            <Col xs=\"6\" md=\"4\">\n              <InputGroup className=\"customInput\">\n                <InputGroupText style={inputStyle}>\n                  <FontAwesomeIcon icon={faCalendar} className=\"mx-1\" /> Check\n                  In\n                </InputGroupText>\n                <Input\n                  style={inputStyle}\n                  type=\"date\"\n                  min={moment(new Date()).format(\"YYYY-MM-DD\")}\n                  max={moment(query.checkout_date)}\n                  value={query.checkin_date ? query.checkin_date : \"\"}\n                  onChange={updateQuery}\n                  id=\"checkin_date\"\n                />\n              </InputGroup>\n            </Col>\n            <Col xs=\"6\" md=\"4\">\n              <InputGroup className=\"customInput\">\n                <InputGroupText style={inputStyle}>\n                  <FontAwesomeIcon icon={faCalendar} className=\"mx-1\" />\n                  Check Out\n                </InputGroupText>\n                <Input\n                  style={inputStyle}\n                  type=\"date\"\n                  value={query.checkout_date ? query.checkout_date : \"\"}\n                  min={moment(\n                    new Date(moment(query.checkin_date).add(1, \"days\"))\n                  ).format(\"YYYY-MM-DD\")}\n                  id=\"checkout_date\"\n                  onChange={updateQuery}\n                />\n              </InputGroup>\n            </Col>\n          </Row>\n          <Card className=\"p-4 my-2\">{hotel.description}</Card>\n          <Table striped>\n            <tbody style={{ fontSize: \"0.75rem\" }}>\n              <tr>\n                <td>Price</td>\n                <td>${hotel.baseprice}</td>\n              </tr>\n              <tr>\n                <td>Address</td>\n                <td>{hotel.addr1}</td>\n              </tr>\n              <tr>\n                <td>City</td>\n                <td>{hotel.city}</td>\n              </tr>\n              <tr>\n                <td>Neighborhood</td>\n                <td>{hotel.neighborhood}</td>\n              </tr>\n              <tr>\n                <td>Country</td>\n                <td>{hotel.country}</td>\n              </tr>\n              <tr>\n                <td>Rating</td>\n                <td>\n                  {[...Array(hotel.starrating)].map((a, i) => (\n                    <FontAwesomeIcon icon={faStar} key={i} />\n                  ))}\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n          <Row>\n            <Col xs=\"auto\" style={{ marginLeft: \"auto\" }}>\n              <Button\n                color=\"primary\"\n                onClick={purchase}\n                disabled={\n                  !(\n                    query.num_adults &&\n                    query.checkin_date &&\n                    query.checkout_date\n                  )\n                }\n              >\n                Book\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n      </CustomContainer>\n    </>\n  );\n};\n\nexport default Hotel;\n","import { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Badge, Card, CardBody, CardHeader, Col, Row } from \"reactstrap\";\n\nconst Hotel = ({ hotel }) => {\n  return (\n    <Card style={{ maxHeight: \"370px\" }} className=\"my-1 customHotel\">\n      <div\n        style={{\n          backgroundImage: `url(${hotel.imageurl})`,\n          backgroundSize: \"cover\",\n          width: \"100%\",\n          height: \"250px\",\n        }}\n      ></div>\n      <CardHeader tag=\"h4\">{hotel.name}</CardHeader>\n      <CardBody>\n        <Row className=\"align-items-center\">\n          <Col xs=\"12\">\n            <p style={{ fontSize: \"0.9rem\" }} className=\"mb-0\">\n              {hotel.addr1} - {hotel.country}{\" \"}\n              {hotel.country !== hotel.city && `- ${hotel.city}`}\n            </p>\n          </Col>\n        </Row>\n        <Row className=\"mt-2\">\n          <Col xs=\"auto\">\n            <Badge color=\"primary\" className=\"py-2\">\n              ${hotel.baseprice} per night\n            </Badge>\n          </Col>\n        </Row>\n        <Row className=\"mt-2\">\n          <Col xs=\"auto\">\n            {[...Array(hotel.starrating)].map((a, i) => (\n              <FontAwesomeIcon icon={faStar} key={i} />\n            ))}\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Hotel;\n","import {\n  faBed,\n  faCalendar,\n  faMapMarkedAlt,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport moment from \"moment\";\nimport {\n  Col,\n  InputGroup,\n  Row,\n  InputGroupText,\n  Input,\n  Container,\n  Button,\n} from \"reactstrap\";\nimport CustomContainer from \"../../components/CustomContainer\";\n\nconst inputStyle = { fontSize: \"0.75rem\" };\nconst Search = ({ fields, setField, hotels, reset, search }) => {\n  const cities = [...new Set(hotels.map(({ city }) => city))];\n  return (\n    <CustomContainer>\n      <Container className=\"py-4\">\n        <div className=\"text-center\">\n          <Row>\n            <Col>\n              <h1>\n                <FontAwesomeIcon icon={faBed} /> Hotels\n              </h1>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs=\"6\" md=\"2\" className=\"align-items-center\">\n              <InputGroup className=\"customInput\">\n                <InputGroupText style={inputStyle}>\n                  <FontAwesomeIcon icon={faMapMarkedAlt} className=\"mx-1\" />\n                  Cities\n                </InputGroupText>\n                <Input\n                  style={inputStyle}\n                  type=\"select\"\n                  value={fields.city}\n                  onChange={setField}\n                  id=\"city\"\n                >\n                  <option value=\"\">Select City</option>\n                  {cities.map((city) => (\n                    <option key={city} value={city}>\n                      {city}\n                    </option>\n                  ))}\n                </Input>\n              </InputGroup>\n            </Col>\n            <Col xs=\"6\" md=\"2\">\n              <InputGroup className=\"customInput\">\n                <InputGroupText style={inputStyle}>\n                  <FontAwesomeIcon icon={faUser} className=\"mx-1\" /> Travellers\n                </InputGroupText>\n                <Input\n                  style={inputStyle}\n                  type=\"select\"\n                  id=\"num_adults\"\n                  onChange={setField}\n                  value={fields.num_adults}\n                >\n                  {[...Array(10)].map((a, i) => (\n                    <option key={i} value={i + 1}>\n                      {i + 1}\n                    </option>\n                  ))}\n                </Input>\n              </InputGroup>\n            </Col>\n            <Col xs=\"6\" md=\"3\">\n              <InputGroup className=\"customInput\">\n                <InputGroupText style={inputStyle}>\n                  <FontAwesomeIcon icon={faCalendar} className=\"mx-1\" /> Check\n                  In\n                </InputGroupText>\n                <Input\n                  style={inputStyle}\n                  type=\"date\"\n                  min={moment(new Date()).format(\"YYYY-MM-DD\")}\n                  max={moment(fields.checkout_date)}\n                  value={fields.checkin_date}\n                  onChange={setField}\n                  id=\"checkin_date\"\n                />\n              </InputGroup>\n            </Col>\n            <Col xs=\"6\" md=\"3\">\n              <InputGroup className=\"customInput\">\n                <InputGroupText style={inputStyle}>\n                  <FontAwesomeIcon icon={faCalendar} className=\"mx-1\" />\n                  Check Out\n                </InputGroupText>\n                <Input\n                  style={inputStyle}\n                  type=\"date\"\n                  value={fields.checkout_date}\n                  min={moment(\n                    new Date(moment(fields.checkin_date).add(1, \"days\"))\n                  ).format(\"YYYY-MM-DD\")}\n                  id=\"checkout_date\"\n                  onChange={setField}\n                />\n              </InputGroup>\n            </Col>\n            <Col xs=\"12\" md=\"2\" className=\"d-flex justify-content-end\">\n              <Button className=\"mx-2\" onClick={reset}>\n                Clear\n              </Button>\n              <Button color=\"primary\" onClick={search} disabled={!fields.city}>\n                Search\n              </Button>\n            </Col>\n          </Row>\n        </div>\n      </Container>\n    </CustomContainer>\n  );\n};\n\nexport default Search;\n","import moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, useNavigate } from \"react-router\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport CustomContainer from \"../../components/CustomContainer\";\nimport Hotel from \"./Hotel\";\nimport Search from \"./Search\";\nimport queryString from \"query-string\";\nimport { NavLink } from \"react-router-dom\";\nimport { fetchHotels } from \"../../store/actions/hotels\";\nimport { fbEvent } from \"../../util/fbEvent\";\n\nconst initialState = {\n  checkin_date: moment(new Date()).format(\"YYYY-MM-DD\"),\n  checkout_date: moment(new Date(moment(new Date()).add(1, \"days\"))).format(\n    \"YYYY-MM-DD\"\n  ),\n  num_adults: 1,\n  city: \"\",\n};\n\nconst Hotels = () => {\n  const dispatch = useDispatch();\n  const hotels = useSelector(({ hotels }) => hotels);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [fields, setFields] = useState(initialState);\n  const [outputHotel, setOutputHotel] = useState(hotels);\n  const [query, setQuery] = useState({});\n  const reset = () => {\n    setQuery({});\n    setFields(initialState);\n    navigate(\"/hotels\");\n    setOutputHotel(hotels);\n  };\n\n  useEffect(() => {\n    if (new Date(fields.checkin_date) > new Date(fields.checkout_date)) {\n      setFields({\n        ...fields,\n        checkout_date: moment(\n          new Date(moment(fields.checkin_date).add(1, \"days\"))\n        ).format(\"YYYY-MM-DD\"),\n      });\n    }\n  }, [fields.checkin_date, fields]);\n\n  useEffect(() => {\n    const query = queryString.parse(location.search);\n    if (hotels.length === 0) dispatch(fetchHotels());\n    else if (Object.keys(query).length > 0) {\n      setFields(query);\n      setOutputHotel(\n        query.city\n          ? hotels.filter((hotel) => hotel.city === query.city)\n          : hotels\n      );\n    } else setOutputHotel(hotels);\n    setQuery(query);\n  }, [location, hotels, dispatch]);\n\n  const setField = (e) =>\n    setFields({ ...fields, [e.target.id]: e.target.value });\n\n  const search = () => {\n    \n    fbEvent({ event: \"Search\", object: {...fields,country:fields.city,region:fields.city} });\n    setOutputHotel(\n      fields.city\n        ? hotels.filter((hotel) => hotel.city === fields.city)\n        : hotels\n    );\n    const searches = Object.keys(fields).map((key) => `${key}=${fields[key]}`);\n    navigate(`/hotels?${searches.join(\"&\")}`);\n  };\n\n  return (\n    <>\n      <Search\n        fields={fields}\n        setField={setField}\n        hotels={hotels}\n        reset={reset}\n        search={search}\n      />\n      <CustomContainer>\n        <Container className=\"my-4\">\n          {Object.keys(query).length > 0 && (\n            <Row>\n              <Col>\n                <p style={{ fontSize: \"0.75rem\" }}>\n                  Found <b>{outputHotel.length}</b> hotels in {query.city} for{\" \"}\n                  <b>{moment(query.checkin_date).format(\"MMM DD, YYYY\")}</b> -{\" \"}\n                  <b>{moment(query.checkout_date).format(\"MMM DD, YYYY\")}</b>\n                </p>\n              </Col>\n            </Row>\n          )}\n          <Row>\n            {outputHotel.map((hotel) => (\n              <Col key={hotel.hotelid} xs=\"12\" md=\"4\">\n                <NavLink\n                  to={`/hotels/${hotel.hotelid}?${Object.keys(query)\n                    .map((key) => `${key}=${query[key]}`)\n                    .join(\"&\")}`}\n                >\n                  <Hotel hotel={hotel} />\n                </NavLink>\n              </Col>\n            ))}\n          </Row>\n        </Container>\n      </CustomContainer>\n    </>\n  );\n};\n\nexport default Hotels;\n","import React, { useEffect } from \"react\";\nimport { Route, Routes } from \"react-router\";\nimport Header from \"./components/Header\";\nimport Home from \"./views/Home\";\nimport Hotel from \"./views/Hotel\";\nimport Hotels from \"./views/Hotels\";\nimport ReactPixel from \"react-facebook-pixel\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchHotels } from \"./store/actions/hotels\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    ReactPixel.init(\"256044018098132\", {}, { autoConfig: true, debug: true });\n    dispatch(fetchHotels());\n  }, [dispatch]);\n  return (\n    <>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route exact path=\"/hotels/:id\" element={<Hotel />} />\n        <Route path=\"/hotels\" element={<Hotels />} />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {}\n\nconst reducer = (state = initialState, actions) => {\n    switch (actions.payload) {\n        default:\n            return state\n    }\n}\n\nexport default reducer","// import hotels from \"../../dumpData/hotels.json\";\n\nconst reducer = (state = [], actions) => {\n  switch (actions.type) {\n    case \"FETCH_HOTELS\":\n      return actions.payload;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport counter from \"./counter\";\nimport hotels from \"./hotels\";\n\nexport default combineReducers({ counter, hotels });\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducer from \"./store/reducers\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}